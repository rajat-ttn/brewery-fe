// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Temperature Filter filters beer based on temperature correctly temperature select should work properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TemperatureFilter
    changeTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Dropdown
        baseClassName="Dropdown"
        onChange={[Function]}
        options={
                Array [
                        Object {
                          "label": "Celsius",
                          "value": "CELSIUS",
                        },
                        Object {
                          "label": "Fahrenheit",
                          "value": "FAHRENHEIT",
                        },
                      ]
        }
        value="Fahrenheit"
/>,
      "className": "dropdownSection",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "baseClassName": "Dropdown",
        "onChange": [Function],
        "options": Array [
          Object {
            "label": "Celsius",
            "value": "CELSIUS",
          },
          Object {
            "label": "Fahrenheit",
            "value": "FAHRENHEIT",
          },
        ],
        "value": "Fahrenheit",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Dropdown
          baseClassName="Dropdown"
          onChange={[Function]}
          options={
                    Array [
                              Object {
                                "label": "Celsius",
                                "value": "CELSIUS",
                              },
                              Object {
                                "label": "Fahrenheit",
                                "value": "FAHRENHEIT",
                              },
                            ]
          }
          value="Fahrenheit"
/>,
        "className": "dropdownSection",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "baseClassName": "Dropdown",
          "onChange": [Function],
          "options": Array [
            Object {
              "label": "Celsius",
              "value": "CELSIUS",
            },
            Object {
              "label": "Fahrenheit",
              "value": "FAHRENHEIT",
            },
          ],
          "value": "Fahrenheit",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
