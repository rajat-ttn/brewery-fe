// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BeerComponent component renders the BeerComponent correctly renders correctly with beer detail and temperature 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    beerList={
        Array [
            Object {
              "beerType": "Aler Beer",
              "containerId": 1,
              "id": 1,
              "tempRange": Array [
                3,
                5,
              ],
            },
          ]
    }
    fetchBeerList={[Function]}
    isAnyBeerOutOfTempRange={false}
    isMute={false}
    setTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
    toggleSound={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoadingIndicator
          showLoader={true}
/>,
        <Header
          isMute={false}
          toggleSound={[Function]}
/>,
        <div
          className="pageLayout"
>
          <div
                    className="dropdownSection"
          >
                    <TemperatureFilter
                              changeTemperatureType={[Function]}
                              temperatureType="FAHRENHEIT"
                    />
          </div>
          <div
                    className="colorInfoWrapper"
          >
                    <div
                              className="colorInfo"
                    >
                              <span
                                        className="status-circle blueBackground"
                              />
                              <small>
                                        <strong>
                                                  Too Low
                                        </strong>
                              </small>
                              <span
                                        className="status-circle redBackground"
                              />
                              <small>
                                        <strong>
                                                  Too High
                                        </strong>
                              </small>
                    </div>
          </div>
          <div
                    className="row beerlistSection"
          >
                    <BeerComponent
                              beerContentDetail={
                                        Object {
                                                  "beerType": "Aler Beer",
                                                  "containerId": 1,
                                                  "id": 1,
                                                  "tempRange": Array [
                                                    3,
                                                    5,
                                                  ],
                                                }
                              }
                              temperatureType="FAHRENHEIT"
                    />
          </div>
</div>,
        <Footer />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "showLoader": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isMute": false,
          "toggleSound": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dropdownSection"
>
              <TemperatureFilter
                            changeTemperatureType={[Function]}
                            temperatureType="FAHRENHEIT"
              />
</div>,
            <div
              className="colorInfoWrapper"
>
              <div
                            className="colorInfo"
              >
                            <span
                                          className="status-circle blueBackground"
                            />
                            <small>
                                          <strong>
                                                        Too Low
                                          </strong>
                            </small>
                            <span
                                          className="status-circle redBackground"
                            />
                            <small>
                                          <strong>
                                                        Too High
                                          </strong>
                            </small>
              </div>
</div>,
            <div
              className="row beerlistSection"
>
              <BeerComponent
                            beerContentDetail={
                                          Object {
                                                        "beerType": "Aler Beer",
                                                        "containerId": 1,
                                                        "id": 1,
                                                        "tempRange": Array [
                                                          3,
                                                          5,
                                                        ],
                                                      }
                            }
                            temperatureType="FAHRENHEIT"
              />
</div>,
          ],
          "className": "pageLayout",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TemperatureFilter
                changeTemperatureType={[Function]}
                temperatureType="FAHRENHEIT"
/>,
              "className": "dropdownSection",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "changeTemperatureType": [Function],
                "temperatureType": "FAHRENHEIT",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="colorInfo"
>
                <span
                                className="status-circle blueBackground"
                />
                <small>
                                <strong>
                                                Too Low
                                </strong>
                </small>
                <span
                                className="status-circle redBackground"
                />
                <small>
                                <strong>
                                                Too High
                                </strong>
                </small>
</div>,
              "className": "colorInfoWrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="status-circle blueBackground"
/>,
                  <small>
                    <strong>
                                        Too Low
                    </strong>
</small>,
                  <span
                    className="status-circle redBackground"
/>,
                  <small>
                    <strong>
                                        Too High
                    </strong>
</small>,
                ],
                "className": "colorInfo",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle blueBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too Low
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too Low",
                    },
                    "ref": null,
                    "rendered": "Too Low",
                    "type": "strong",
                  },
                  "type": "small",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle redBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too High
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too High",
                    },
                    "ref": null,
                    "rendered": "Too High",
                    "type": "strong",
                  },
                  "type": "small",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <BeerComponent
                  beerContentDetail={
                                    Object {
                                                      "beerType": "Aler Beer",
                                                      "containerId": 1,
                                                      "id": 1,
                                                      "tempRange": Array [
                                                        3,
                                                        5,
                                                      ],
                                                    }
                  }
                  temperatureType="FAHRENHEIT"
/>,
              ],
              "className": "row beerlistSection",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "beerContentDetail": Object {
                    "beerType": "Aler Beer",
                    "containerId": 1,
                    "id": 1,
                    "tempRange": Array [
                      3,
                      5,
                    ],
                  },
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoadingIndicator
            showLoader={true}
/>,
          <Header
            isMute={false}
            toggleSound={[Function]}
/>,
          <div
            className="pageLayout"
>
            <div
                        className="dropdownSection"
            >
                        <TemperatureFilter
                                    changeTemperatureType={[Function]}
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
            <div
                        className="colorInfoWrapper"
            >
                        <div
                                    className="colorInfo"
                        >
                                    <span
                                                className="status-circle blueBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too Low
                                                </strong>
                                    </small>
                                    <span
                                                className="status-circle redBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too High
                                                </strong>
                                    </small>
                        </div>
            </div>
            <div
                        className="row beerlistSection"
            >
                        <BeerComponent
                                    beerContentDetail={
                                                Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                                    }
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
</div>,
          <Footer />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "showLoader": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isMute": false,
            "toggleSound": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dropdownSection"
>
                <TemperatureFilter
                                changeTemperatureType={[Function]}
                                temperatureType="FAHRENHEIT"
                />
</div>,
              <div
                className="colorInfoWrapper"
>
                <div
                                className="colorInfo"
                >
                                <span
                                                className="status-circle blueBackground"
                                />
                                <small>
                                                <strong>
                                                                Too Low
                                                </strong>
                                </small>
                                <span
                                                className="status-circle redBackground"
                                />
                                <small>
                                                <strong>
                                                                Too High
                                                </strong>
                                </small>
                </div>
</div>,
              <div
                className="row beerlistSection"
>
                <BeerComponent
                                beerContentDetail={
                                                Object {
                                                                "beerType": "Aler Beer",
                                                                "containerId": 1,
                                                                "id": 1,
                                                                "tempRange": Array [
                                                                  3,
                                                                  5,
                                                                ],
                                                              }
                                }
                                temperatureType="FAHRENHEIT"
                />
</div>,
            ],
            "className": "pageLayout",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TemperatureFilter
                  changeTemperatureType={[Function]}
                  temperatureType="FAHRENHEIT"
/>,
                "className": "dropdownSection",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "changeTemperatureType": [Function],
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="colorInfo"
>
                  <span
                                    className="status-circle blueBackground"
                  />
                  <small>
                                    <strong>
                                                      Too Low
                                    </strong>
                  </small>
                  <span
                                    className="status-circle redBackground"
                  />
                  <small>
                                    <strong>
                                                      Too High
                                    </strong>
                  </small>
</div>,
                "className": "colorInfoWrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="status-circle blueBackground"
/>,
                    <small>
                      <strong>
                                            Too Low
                      </strong>
</small>,
                    <span
                      className="status-circle redBackground"
/>,
                    <small>
                      <strong>
                                            Too High
                      </strong>
</small>,
                  ],
                  "className": "colorInfo",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle blueBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too Low
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too Low",
                      },
                      "ref": null,
                      "rendered": "Too Low",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle redBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too High
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too High",
                      },
                      "ref": null,
                      "rendered": "Too High",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <BeerComponent
                    beerContentDetail={
                                        Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                    }
                    temperatureType="FAHRENHEIT"
/>,
                ],
                "className": "row beerlistSection",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "beerContentDetail": Object {
                      "beerType": "Aler Beer",
                      "containerId": 1,
                      "id": 1,
                      "tempRange": Array [
                        3,
                        5,
                      ],
                    },
                    "temperatureType": "FAHRENHEIT",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`BeerComponent component renders the BeerComponent correctly renders correctly with change in temperature 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    beerList={
        Array [
            Object {
              "beerType": "Aler Beer",
              "containerId": 1,
              "id": 1,
              "tempRange": Array [
                3,
                5,
              ],
            },
          ]
    }
    fetchBeerList={[Function]}
    isAnyBeerOutOfTempRange={false}
    isMute={false}
    setTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
    toggleSound={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoadingIndicator
          showLoader={true}
/>,
        <Header
          isMute={false}
          toggleSound={[Function]}
/>,
        <div
          className="pageLayout"
>
          <div
                    className="dropdownSection"
          >
                    <TemperatureFilter
                              changeTemperatureType={[Function]}
                              temperatureType="FAHRENHEIT"
                    />
          </div>
          <div
                    className="colorInfoWrapper"
          >
                    <div
                              className="colorInfo"
                    >
                              <span
                                        className="status-circle blueBackground"
                              />
                              <small>
                                        <strong>
                                                  Too Low
                                        </strong>
                              </small>
                              <span
                                        className="status-circle redBackground"
                              />
                              <small>
                                        <strong>
                                                  Too High
                                        </strong>
                              </small>
                    </div>
          </div>
          <div
                    className="row beerlistSection"
          >
                    <BeerComponent
                              beerContentDetail={
                                        Object {
                                                  "beerType": "Aler Beer",
                                                  "containerId": 1,
                                                  "id": 1,
                                                  "tempRange": Array [
                                                    3,
                                                    5,
                                                  ],
                                                }
                              }
                              temperatureType="FAHRENHEIT"
                    />
          </div>
</div>,
        <Footer />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "showLoader": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isMute": false,
          "toggleSound": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dropdownSection"
>
              <TemperatureFilter
                            changeTemperatureType={[Function]}
                            temperatureType="FAHRENHEIT"
              />
</div>,
            <div
              className="colorInfoWrapper"
>
              <div
                            className="colorInfo"
              >
                            <span
                                          className="status-circle blueBackground"
                            />
                            <small>
                                          <strong>
                                                        Too Low
                                          </strong>
                            </small>
                            <span
                                          className="status-circle redBackground"
                            />
                            <small>
                                          <strong>
                                                        Too High
                                          </strong>
                            </small>
              </div>
</div>,
            <div
              className="row beerlistSection"
>
              <BeerComponent
                            beerContentDetail={
                                          Object {
                                                        "beerType": "Aler Beer",
                                                        "containerId": 1,
                                                        "id": 1,
                                                        "tempRange": Array [
                                                          3,
                                                          5,
                                                        ],
                                                      }
                            }
                            temperatureType="FAHRENHEIT"
              />
</div>,
          ],
          "className": "pageLayout",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TemperatureFilter
                changeTemperatureType={[Function]}
                temperatureType="FAHRENHEIT"
/>,
              "className": "dropdownSection",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "changeTemperatureType": [Function],
                "temperatureType": "FAHRENHEIT",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="colorInfo"
>
                <span
                                className="status-circle blueBackground"
                />
                <small>
                                <strong>
                                                Too Low
                                </strong>
                </small>
                <span
                                className="status-circle redBackground"
                />
                <small>
                                <strong>
                                                Too High
                                </strong>
                </small>
</div>,
              "className": "colorInfoWrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="status-circle blueBackground"
/>,
                  <small>
                    <strong>
                                        Too Low
                    </strong>
</small>,
                  <span
                    className="status-circle redBackground"
/>,
                  <small>
                    <strong>
                                        Too High
                    </strong>
</small>,
                ],
                "className": "colorInfo",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle blueBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too Low
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too Low",
                    },
                    "ref": null,
                    "rendered": "Too Low",
                    "type": "strong",
                  },
                  "type": "small",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle redBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too High
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too High",
                    },
                    "ref": null,
                    "rendered": "Too High",
                    "type": "strong",
                  },
                  "type": "small",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <BeerComponent
                  beerContentDetail={
                                    Object {
                                                      "beerType": "Aler Beer",
                                                      "containerId": 1,
                                                      "id": 1,
                                                      "tempRange": Array [
                                                        3,
                                                        5,
                                                      ],
                                                    }
                  }
                  temperatureType="FAHRENHEIT"
/>,
              ],
              "className": "row beerlistSection",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "beerContentDetail": Object {
                    "beerType": "Aler Beer",
                    "containerId": 1,
                    "id": 1,
                    "tempRange": Array [
                      3,
                      5,
                    ],
                  },
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoadingIndicator
            showLoader={true}
/>,
          <Header
            isMute={false}
            toggleSound={[Function]}
/>,
          <div
            className="pageLayout"
>
            <div
                        className="dropdownSection"
            >
                        <TemperatureFilter
                                    changeTemperatureType={[Function]}
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
            <div
                        className="colorInfoWrapper"
            >
                        <div
                                    className="colorInfo"
                        >
                                    <span
                                                className="status-circle blueBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too Low
                                                </strong>
                                    </small>
                                    <span
                                                className="status-circle redBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too High
                                                </strong>
                                    </small>
                        </div>
            </div>
            <div
                        className="row beerlistSection"
            >
                        <BeerComponent
                                    beerContentDetail={
                                                Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                                    }
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
</div>,
          <Footer />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "showLoader": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isMute": false,
            "toggleSound": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dropdownSection"
>
                <TemperatureFilter
                                changeTemperatureType={[Function]}
                                temperatureType="FAHRENHEIT"
                />
</div>,
              <div
                className="colorInfoWrapper"
>
                <div
                                className="colorInfo"
                >
                                <span
                                                className="status-circle blueBackground"
                                />
                                <small>
                                                <strong>
                                                                Too Low
                                                </strong>
                                </small>
                                <span
                                                className="status-circle redBackground"
                                />
                                <small>
                                                <strong>
                                                                Too High
                                                </strong>
                                </small>
                </div>
</div>,
              <div
                className="row beerlistSection"
>
                <BeerComponent
                                beerContentDetail={
                                                Object {
                                                                "beerType": "Aler Beer",
                                                                "containerId": 1,
                                                                "id": 1,
                                                                "tempRange": Array [
                                                                  3,
                                                                  5,
                                                                ],
                                                              }
                                }
                                temperatureType="FAHRENHEIT"
                />
</div>,
            ],
            "className": "pageLayout",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TemperatureFilter
                  changeTemperatureType={[Function]}
                  temperatureType="FAHRENHEIT"
/>,
                "className": "dropdownSection",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "changeTemperatureType": [Function],
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="colorInfo"
>
                  <span
                                    className="status-circle blueBackground"
                  />
                  <small>
                                    <strong>
                                                      Too Low
                                    </strong>
                  </small>
                  <span
                                    className="status-circle redBackground"
                  />
                  <small>
                                    <strong>
                                                      Too High
                                    </strong>
                  </small>
</div>,
                "className": "colorInfoWrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="status-circle blueBackground"
/>,
                    <small>
                      <strong>
                                            Too Low
                      </strong>
</small>,
                    <span
                      className="status-circle redBackground"
/>,
                    <small>
                      <strong>
                                            Too High
                      </strong>
</small>,
                  ],
                  "className": "colorInfo",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle blueBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too Low
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too Low",
                      },
                      "ref": null,
                      "rendered": "Too Low",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle redBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too High
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too High",
                      },
                      "ref": null,
                      "rendered": "Too High",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <BeerComponent
                    beerContentDetail={
                                        Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                    }
                    temperatureType="FAHRENHEIT"
/>,
                ],
                "className": "row beerlistSection",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "beerContentDetail": Object {
                      "beerType": "Aler Beer",
                      "containerId": 1,
                      "id": 1,
                      "tempRange": Array [
                        3,
                        5,
                      ],
                    },
                    "temperatureType": "FAHRENHEIT",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`BeerComponent component renders the BeerComponent correctly renders correctly with different temperature 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    beerList={
        Array [
            Object {
              "beerType": "Aler Beer",
              "containerId": 1,
              "id": 1,
              "tempRange": Array [
                3,
                5,
              ],
            },
          ]
    }
    fetchBeerList={[Function]}
    isAnyBeerOutOfTempRange={false}
    isMute={false}
    setTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
    toggleSound={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoadingIndicator
          showLoader={true}
/>,
        <Header
          isMute={false}
          toggleSound={[Function]}
/>,
        <div
          className="pageLayout"
>
          <div
                    className="dropdownSection"
          >
                    <TemperatureFilter
                              changeTemperatureType={[Function]}
                              temperatureType="FAHRENHEIT"
                    />
          </div>
          <div
                    className="colorInfoWrapper"
          >
                    <div
                              className="colorInfo"
                    >
                              <span
                                        className="status-circle blueBackground"
                              />
                              <small>
                                        <strong>
                                                  Too Low
                                        </strong>
                              </small>
                              <span
                                        className="status-circle redBackground"
                              />
                              <small>
                                        <strong>
                                                  Too High
                                        </strong>
                              </small>
                    </div>
          </div>
          <div
                    className="row beerlistSection"
          >
                    <BeerComponent
                              beerContentDetail={
                                        Object {
                                                  "beerType": "Aler Beer",
                                                  "containerId": 1,
                                                  "id": 1,
                                                  "tempRange": Array [
                                                    3,
                                                    5,
                                                  ],
                                                }
                              }
                              temperatureType="FAHRENHEIT"
                    />
          </div>
</div>,
        <Footer />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "showLoader": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isMute": false,
          "toggleSound": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dropdownSection"
>
              <TemperatureFilter
                            changeTemperatureType={[Function]}
                            temperatureType="FAHRENHEIT"
              />
</div>,
            <div
              className="colorInfoWrapper"
>
              <div
                            className="colorInfo"
              >
                            <span
                                          className="status-circle blueBackground"
                            />
                            <small>
                                          <strong>
                                                        Too Low
                                          </strong>
                            </small>
                            <span
                                          className="status-circle redBackground"
                            />
                            <small>
                                          <strong>
                                                        Too High
                                          </strong>
                            </small>
              </div>
</div>,
            <div
              className="row beerlistSection"
>
              <BeerComponent
                            beerContentDetail={
                                          Object {
                                                        "beerType": "Aler Beer",
                                                        "containerId": 1,
                                                        "id": 1,
                                                        "tempRange": Array [
                                                          3,
                                                          5,
                                                        ],
                                                      }
                            }
                            temperatureType="FAHRENHEIT"
              />
</div>,
          ],
          "className": "pageLayout",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TemperatureFilter
                changeTemperatureType={[Function]}
                temperatureType="FAHRENHEIT"
/>,
              "className": "dropdownSection",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "changeTemperatureType": [Function],
                "temperatureType": "FAHRENHEIT",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="colorInfo"
>
                <span
                                className="status-circle blueBackground"
                />
                <small>
                                <strong>
                                                Too Low
                                </strong>
                </small>
                <span
                                className="status-circle redBackground"
                />
                <small>
                                <strong>
                                                Too High
                                </strong>
                </small>
</div>,
              "className": "colorInfoWrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="status-circle blueBackground"
/>,
                  <small>
                    <strong>
                                        Too Low
                    </strong>
</small>,
                  <span
                    className="status-circle redBackground"
/>,
                  <small>
                    <strong>
                                        Too High
                    </strong>
</small>,
                ],
                "className": "colorInfo",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle blueBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too Low
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too Low",
                    },
                    "ref": null,
                    "rendered": "Too Low",
                    "type": "strong",
                  },
                  "type": "small",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle redBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too High
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too High",
                    },
                    "ref": null,
                    "rendered": "Too High",
                    "type": "strong",
                  },
                  "type": "small",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <BeerComponent
                  beerContentDetail={
                                    Object {
                                                      "beerType": "Aler Beer",
                                                      "containerId": 1,
                                                      "id": 1,
                                                      "tempRange": Array [
                                                        3,
                                                        5,
                                                      ],
                                                    }
                  }
                  temperatureType="FAHRENHEIT"
/>,
              ],
              "className": "row beerlistSection",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "beerContentDetail": Object {
                    "beerType": "Aler Beer",
                    "containerId": 1,
                    "id": 1,
                    "tempRange": Array [
                      3,
                      5,
                    ],
                  },
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoadingIndicator
            showLoader={true}
/>,
          <Header
            isMute={false}
            toggleSound={[Function]}
/>,
          <div
            className="pageLayout"
>
            <div
                        className="dropdownSection"
            >
                        <TemperatureFilter
                                    changeTemperatureType={[Function]}
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
            <div
                        className="colorInfoWrapper"
            >
                        <div
                                    className="colorInfo"
                        >
                                    <span
                                                className="status-circle blueBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too Low
                                                </strong>
                                    </small>
                                    <span
                                                className="status-circle redBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too High
                                                </strong>
                                    </small>
                        </div>
            </div>
            <div
                        className="row beerlistSection"
            >
                        <BeerComponent
                                    beerContentDetail={
                                                Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                                    }
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
</div>,
          <Footer />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "showLoader": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isMute": false,
            "toggleSound": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dropdownSection"
>
                <TemperatureFilter
                                changeTemperatureType={[Function]}
                                temperatureType="FAHRENHEIT"
                />
</div>,
              <div
                className="colorInfoWrapper"
>
                <div
                                className="colorInfo"
                >
                                <span
                                                className="status-circle blueBackground"
                                />
                                <small>
                                                <strong>
                                                                Too Low
                                                </strong>
                                </small>
                                <span
                                                className="status-circle redBackground"
                                />
                                <small>
                                                <strong>
                                                                Too High
                                                </strong>
                                </small>
                </div>
</div>,
              <div
                className="row beerlistSection"
>
                <BeerComponent
                                beerContentDetail={
                                                Object {
                                                                "beerType": "Aler Beer",
                                                                "containerId": 1,
                                                                "id": 1,
                                                                "tempRange": Array [
                                                                  3,
                                                                  5,
                                                                ],
                                                              }
                                }
                                temperatureType="FAHRENHEIT"
                />
</div>,
            ],
            "className": "pageLayout",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TemperatureFilter
                  changeTemperatureType={[Function]}
                  temperatureType="FAHRENHEIT"
/>,
                "className": "dropdownSection",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "changeTemperatureType": [Function],
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="colorInfo"
>
                  <span
                                    className="status-circle blueBackground"
                  />
                  <small>
                                    <strong>
                                                      Too Low
                                    </strong>
                  </small>
                  <span
                                    className="status-circle redBackground"
                  />
                  <small>
                                    <strong>
                                                      Too High
                                    </strong>
                  </small>
</div>,
                "className": "colorInfoWrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="status-circle blueBackground"
/>,
                    <small>
                      <strong>
                                            Too Low
                      </strong>
</small>,
                    <span
                      className="status-circle redBackground"
/>,
                    <small>
                      <strong>
                                            Too High
                      </strong>
</small>,
                  ],
                  "className": "colorInfo",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle blueBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too Low
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too Low",
                      },
                      "ref": null,
                      "rendered": "Too Low",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle redBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too High
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too High",
                      },
                      "ref": null,
                      "rendered": "Too High",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <BeerComponent
                    beerContentDetail={
                                        Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                    }
                    temperatureType="FAHRENHEIT"
/>,
                ],
                "className": "row beerlistSection",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "beerContentDetail": Object {
                      "beerType": "Aler Beer",
                      "containerId": 1,
                      "id": 1,
                      "tempRange": Array [
                        3,
                        5,
                      ],
                    },
                    "temperatureType": "FAHRENHEIT",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`BeerComponent component renders the BeerComponent correctly renders correctly with sound 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    beerList={
        Array [
            Object {
              "beerType": "Aler Beer",
              "containerId": 1,
              "id": 1,
              "tempRange": Array [
                3,
                5,
              ],
            },
          ]
    }
    fetchBeerList={[Function]}
    isAnyBeerOutOfTempRange={false}
    isMute={false}
    setTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
    toggleSound={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoadingIndicator
          showLoader={true}
/>,
        <Header
          isMute={false}
          toggleSound={[Function]}
/>,
        <div
          className="pageLayout"
>
          <div
                    className="dropdownSection"
          >
                    <TemperatureFilter
                              changeTemperatureType={[Function]}
                              temperatureType="FAHRENHEIT"
                    />
          </div>
          <div
                    className="colorInfoWrapper"
          >
                    <div
                              className="colorInfo"
                    >
                              <span
                                        className="status-circle blueBackground"
                              />
                              <small>
                                        <strong>
                                                  Too Low
                                        </strong>
                              </small>
                              <span
                                        className="status-circle redBackground"
                              />
                              <small>
                                        <strong>
                                                  Too High
                                        </strong>
                              </small>
                    </div>
          </div>
          <div
                    className="row beerlistSection"
          >
                    <BeerComponent
                              beerContentDetail={
                                        Object {
                                                  "beerType": "Aler Beer",
                                                  "containerId": 1,
                                                  "id": 1,
                                                  "tempRange": Array [
                                                    3,
                                                    5,
                                                  ],
                                                }
                              }
                              temperatureType="FAHRENHEIT"
                    />
          </div>
</div>,
        <Footer />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "showLoader": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isMute": false,
          "toggleSound": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dropdownSection"
>
              <TemperatureFilter
                            changeTemperatureType={[Function]}
                            temperatureType="FAHRENHEIT"
              />
</div>,
            <div
              className="colorInfoWrapper"
>
              <div
                            className="colorInfo"
              >
                            <span
                                          className="status-circle blueBackground"
                            />
                            <small>
                                          <strong>
                                                        Too Low
                                          </strong>
                            </small>
                            <span
                                          className="status-circle redBackground"
                            />
                            <small>
                                          <strong>
                                                        Too High
                                          </strong>
                            </small>
              </div>
</div>,
            <div
              className="row beerlistSection"
>
              <BeerComponent
                            beerContentDetail={
                                          Object {
                                                        "beerType": "Aler Beer",
                                                        "containerId": 1,
                                                        "id": 1,
                                                        "tempRange": Array [
                                                          3,
                                                          5,
                                                        ],
                                                      }
                            }
                            temperatureType="FAHRENHEIT"
              />
</div>,
          ],
          "className": "pageLayout",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TemperatureFilter
                changeTemperatureType={[Function]}
                temperatureType="FAHRENHEIT"
/>,
              "className": "dropdownSection",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "changeTemperatureType": [Function],
                "temperatureType": "FAHRENHEIT",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="colorInfo"
>
                <span
                                className="status-circle blueBackground"
                />
                <small>
                                <strong>
                                                Too Low
                                </strong>
                </small>
                <span
                                className="status-circle redBackground"
                />
                <small>
                                <strong>
                                                Too High
                                </strong>
                </small>
</div>,
              "className": "colorInfoWrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="status-circle blueBackground"
/>,
                  <small>
                    <strong>
                                        Too Low
                    </strong>
</small>,
                  <span
                    className="status-circle redBackground"
/>,
                  <small>
                    <strong>
                                        Too High
                    </strong>
</small>,
                ],
                "className": "colorInfo",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle blueBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too Low
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too Low",
                    },
                    "ref": null,
                    "rendered": "Too Low",
                    "type": "strong",
                  },
                  "type": "small",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle redBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too High
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too High",
                    },
                    "ref": null,
                    "rendered": "Too High",
                    "type": "strong",
                  },
                  "type": "small",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <BeerComponent
                  beerContentDetail={
                                    Object {
                                                      "beerType": "Aler Beer",
                                                      "containerId": 1,
                                                      "id": 1,
                                                      "tempRange": Array [
                                                        3,
                                                        5,
                                                      ],
                                                    }
                  }
                  temperatureType="FAHRENHEIT"
/>,
              ],
              "className": "row beerlistSection",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "beerContentDetail": Object {
                    "beerType": "Aler Beer",
                    "containerId": 1,
                    "id": 1,
                    "tempRange": Array [
                      3,
                      5,
                    ],
                  },
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoadingIndicator
            showLoader={true}
/>,
          <Header
            isMute={false}
            toggleSound={[Function]}
/>,
          <div
            className="pageLayout"
>
            <div
                        className="dropdownSection"
            >
                        <TemperatureFilter
                                    changeTemperatureType={[Function]}
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
            <div
                        className="colorInfoWrapper"
            >
                        <div
                                    className="colorInfo"
                        >
                                    <span
                                                className="status-circle blueBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too Low
                                                </strong>
                                    </small>
                                    <span
                                                className="status-circle redBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too High
                                                </strong>
                                    </small>
                        </div>
            </div>
            <div
                        className="row beerlistSection"
            >
                        <BeerComponent
                                    beerContentDetail={
                                                Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                                    }
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
</div>,
          <Footer />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "showLoader": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isMute": false,
            "toggleSound": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dropdownSection"
>
                <TemperatureFilter
                                changeTemperatureType={[Function]}
                                temperatureType="FAHRENHEIT"
                />
</div>,
              <div
                className="colorInfoWrapper"
>
                <div
                                className="colorInfo"
                >
                                <span
                                                className="status-circle blueBackground"
                                />
                                <small>
                                                <strong>
                                                                Too Low
                                                </strong>
                                </small>
                                <span
                                                className="status-circle redBackground"
                                />
                                <small>
                                                <strong>
                                                                Too High
                                                </strong>
                                </small>
                </div>
</div>,
              <div
                className="row beerlistSection"
>
                <BeerComponent
                                beerContentDetail={
                                                Object {
                                                                "beerType": "Aler Beer",
                                                                "containerId": 1,
                                                                "id": 1,
                                                                "tempRange": Array [
                                                                  3,
                                                                  5,
                                                                ],
                                                              }
                                }
                                temperatureType="FAHRENHEIT"
                />
</div>,
            ],
            "className": "pageLayout",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TemperatureFilter
                  changeTemperatureType={[Function]}
                  temperatureType="FAHRENHEIT"
/>,
                "className": "dropdownSection",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "changeTemperatureType": [Function],
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="colorInfo"
>
                  <span
                                    className="status-circle blueBackground"
                  />
                  <small>
                                    <strong>
                                                      Too Low
                                    </strong>
                  </small>
                  <span
                                    className="status-circle redBackground"
                  />
                  <small>
                                    <strong>
                                                      Too High
                                    </strong>
                  </small>
</div>,
                "className": "colorInfoWrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="status-circle blueBackground"
/>,
                    <small>
                      <strong>
                                            Too Low
                      </strong>
</small>,
                    <span
                      className="status-circle redBackground"
/>,
                    <small>
                      <strong>
                                            Too High
                      </strong>
</small>,
                  ],
                  "className": "colorInfo",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle blueBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too Low
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too Low",
                      },
                      "ref": null,
                      "rendered": "Too Low",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle redBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too High
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too High",
                      },
                      "ref": null,
                      "rendered": "Too High",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <BeerComponent
                    beerContentDetail={
                                        Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                    }
                    temperatureType="FAHRENHEIT"
/>,
                ],
                "className": "row beerlistSection",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "beerContentDetail": Object {
                      "beerType": "Aler Beer",
                      "containerId": 1,
                      "id": 1,
                      "tempRange": Array [
                        3,
                        5,
                      ],
                    },
                    "temperatureType": "FAHRENHEIT",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`BeerComponent component renders the BeerComponent correctly renders correctly without beerList 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dashboard
    beerList={
        Array [
            Object {
              "beerType": "Aler Beer",
              "containerId": 1,
              "id": 1,
              "tempRange": Array [
                3,
                5,
              ],
            },
          ]
    }
    fetchBeerList={[Function]}
    isAnyBeerOutOfTempRange={false}
    isMute={false}
    setTemperatureType={[Function]}
    temperatureType="FAHRENHEIT"
    toggleSound={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoadingIndicator
          showLoader={true}
/>,
        <Header
          isMute={false}
          toggleSound={[Function]}
/>,
        <div
          className="pageLayout"
>
          <div
                    className="dropdownSection"
          >
                    <TemperatureFilter
                              changeTemperatureType={[Function]}
                              temperatureType="FAHRENHEIT"
                    />
          </div>
          <div
                    className="colorInfoWrapper"
          >
                    <div
                              className="colorInfo"
                    >
                              <span
                                        className="status-circle blueBackground"
                              />
                              <small>
                                        <strong>
                                                  Too Low
                                        </strong>
                              </small>
                              <span
                                        className="status-circle redBackground"
                              />
                              <small>
                                        <strong>
                                                  Too High
                                        </strong>
                              </small>
                    </div>
          </div>
          <div
                    className="row beerlistSection"
          >
                    <BeerComponent
                              beerContentDetail={
                                        Object {
                                                  "beerType": "Aler Beer",
                                                  "containerId": 1,
                                                  "id": 1,
                                                  "tempRange": Array [
                                                    3,
                                                    5,
                                                  ],
                                                }
                              }
                              temperatureType="FAHRENHEIT"
                    />
          </div>
</div>,
        <Footer />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "showLoader": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isMute": false,
          "toggleSound": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dropdownSection"
>
              <TemperatureFilter
                            changeTemperatureType={[Function]}
                            temperatureType="FAHRENHEIT"
              />
</div>,
            <div
              className="colorInfoWrapper"
>
              <div
                            className="colorInfo"
              >
                            <span
                                          className="status-circle blueBackground"
                            />
                            <small>
                                          <strong>
                                                        Too Low
                                          </strong>
                            </small>
                            <span
                                          className="status-circle redBackground"
                            />
                            <small>
                                          <strong>
                                                        Too High
                                          </strong>
                            </small>
              </div>
</div>,
            <div
              className="row beerlistSection"
>
              <BeerComponent
                            beerContentDetail={
                                          Object {
                                                        "beerType": "Aler Beer",
                                                        "containerId": 1,
                                                        "id": 1,
                                                        "tempRange": Array [
                                                          3,
                                                          5,
                                                        ],
                                                      }
                            }
                            temperatureType="FAHRENHEIT"
              />
</div>,
          ],
          "className": "pageLayout",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TemperatureFilter
                changeTemperatureType={[Function]}
                temperatureType="FAHRENHEIT"
/>,
              "className": "dropdownSection",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "changeTemperatureType": [Function],
                "temperatureType": "FAHRENHEIT",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="colorInfo"
>
                <span
                                className="status-circle blueBackground"
                />
                <small>
                                <strong>
                                                Too Low
                                </strong>
                </small>
                <span
                                className="status-circle redBackground"
                />
                <small>
                                <strong>
                                                Too High
                                </strong>
                </small>
</div>,
              "className": "colorInfoWrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="status-circle blueBackground"
/>,
                  <small>
                    <strong>
                                        Too Low
                    </strong>
</small>,
                  <span
                    className="status-circle redBackground"
/>,
                  <small>
                    <strong>
                                        Too High
                    </strong>
</small>,
                ],
                "className": "colorInfo",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle blueBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too Low
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too Low",
                    },
                    "ref": null,
                    "rendered": "Too Low",
                    "type": "strong",
                  },
                  "type": "small",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "status-circle redBackground",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <strong>
                      Too High
</strong>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Too High",
                    },
                    "ref": null,
                    "rendered": "Too High",
                    "type": "strong",
                  },
                  "type": "small",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <BeerComponent
                  beerContentDetail={
                                    Object {
                                                      "beerType": "Aler Beer",
                                                      "containerId": 1,
                                                      "id": 1,
                                                      "tempRange": Array [
                                                        3,
                                                        5,
                                                      ],
                                                    }
                  }
                  temperatureType="FAHRENHEIT"
/>,
              ],
              "className": "row beerlistSection",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "beerContentDetail": Object {
                    "beerType": "Aler Beer",
                    "containerId": 1,
                    "id": 1,
                    "tempRange": Array [
                      3,
                      5,
                    ],
                  },
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoadingIndicator
            showLoader={true}
/>,
          <Header
            isMute={false}
            toggleSound={[Function]}
/>,
          <div
            className="pageLayout"
>
            <div
                        className="dropdownSection"
            >
                        <TemperatureFilter
                                    changeTemperatureType={[Function]}
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
            <div
                        className="colorInfoWrapper"
            >
                        <div
                                    className="colorInfo"
                        >
                                    <span
                                                className="status-circle blueBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too Low
                                                </strong>
                                    </small>
                                    <span
                                                className="status-circle redBackground"
                                    />
                                    <small>
                                                <strong>
                                                            Too High
                                                </strong>
                                    </small>
                        </div>
            </div>
            <div
                        className="row beerlistSection"
            >
                        <BeerComponent
                                    beerContentDetail={
                                                Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                                    }
                                    temperatureType="FAHRENHEIT"
                        />
            </div>
</div>,
          <Footer />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "showLoader": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isMute": false,
            "toggleSound": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dropdownSection"
>
                <TemperatureFilter
                                changeTemperatureType={[Function]}
                                temperatureType="FAHRENHEIT"
                />
</div>,
              <div
                className="colorInfoWrapper"
>
                <div
                                className="colorInfo"
                >
                                <span
                                                className="status-circle blueBackground"
                                />
                                <small>
                                                <strong>
                                                                Too Low
                                                </strong>
                                </small>
                                <span
                                                className="status-circle redBackground"
                                />
                                <small>
                                                <strong>
                                                                Too High
                                                </strong>
                                </small>
                </div>
</div>,
              <div
                className="row beerlistSection"
>
                <BeerComponent
                                beerContentDetail={
                                                Object {
                                                                "beerType": "Aler Beer",
                                                                "containerId": 1,
                                                                "id": 1,
                                                                "tempRange": Array [
                                                                  3,
                                                                  5,
                                                                ],
                                                              }
                                }
                                temperatureType="FAHRENHEIT"
                />
</div>,
            ],
            "className": "pageLayout",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TemperatureFilter
                  changeTemperatureType={[Function]}
                  temperatureType="FAHRENHEIT"
/>,
                "className": "dropdownSection",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "changeTemperatureType": [Function],
                  "temperatureType": "FAHRENHEIT",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="colorInfo"
>
                  <span
                                    className="status-circle blueBackground"
                  />
                  <small>
                                    <strong>
                                                      Too Low
                                    </strong>
                  </small>
                  <span
                                    className="status-circle redBackground"
                  />
                  <small>
                                    <strong>
                                                      Too High
                                    </strong>
                  </small>
</div>,
                "className": "colorInfoWrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="status-circle blueBackground"
/>,
                    <small>
                      <strong>
                                            Too Low
                      </strong>
</small>,
                    <span
                      className="status-circle redBackground"
/>,
                    <small>
                      <strong>
                                            Too High
                      </strong>
</small>,
                  ],
                  "className": "colorInfo",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle blueBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too Low
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too Low",
                      },
                      "ref": null,
                      "rendered": "Too Low",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "status-circle redBackground",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <strong>
                        Too High
</strong>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Too High",
                      },
                      "ref": null,
                      "rendered": "Too High",
                      "type": "strong",
                    },
                    "type": "small",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <BeerComponent
                    beerContentDetail={
                                        Object {
                                                            "beerType": "Aler Beer",
                                                            "containerId": 1,
                                                            "id": 1,
                                                            "tempRange": Array [
                                                              3,
                                                              5,
                                                            ],
                                                          }
                    }
                    temperatureType="FAHRENHEIT"
/>,
                ],
                "className": "row beerlistSection",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "beerContentDetail": Object {
                      "beerType": "Aler Beer",
                      "containerId": 1,
                      "id": 1,
                      "tempRange": Array [
                        3,
                        5,
                      ],
                    },
                    "temperatureType": "FAHRENHEIT",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
